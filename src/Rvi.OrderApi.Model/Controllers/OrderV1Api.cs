/*
 * Dutch Insurance Order API
 *
 * API for placing and fetching orders in the Dutch insurance market
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
    using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Rvi.OrderAPI.Model.Attributes;
using Rvi.OrderAPI.Model.Models;

namespace Rvi.OrderAPI.Model.Controllers
{ 
    /// <summary>
        /// 
        /// </summary>
    [ApiController]
    public abstract class OrderV1ApiController : ControllerBase
    { 
        /// <summary>
            /// Create a new insurance order
            /// </summary>
            /// <param name="createOrderV1"></param>
            /// <response code="201">Order created successfully</response>
            /// <response code="400">Bad request</response>
            /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/api/v1/orders")]
            [Consumes("application/json")]
        [ValidateModelState]
            [ProducesResponseType(statusCode: 201, type: typeof(OrderCreatedResponseV1))]
            [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponseV1))]
            [ProducesResponseType(statusCode: 500, type: typeof(ErrorResponseV1))]
        public abstract Task<IActionResult> CreateOrder([FromBody]CreateOrderV1 createOrderV1);

        /// <summary>
            /// Get details of a specific order
            /// </summary>
            /// <param name="orderId">ID of the order to retrieve</param>
            /// <response code="200">Order details retrieved successfully</response>
            /// <response code="404">Order not found</response>
            /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/api/v1/orders/{orderId}")]
        [ValidateModelState]
            [ProducesResponseType(statusCode: 200, type: typeof(OrderStatusV1))]
            [ProducesResponseType(statusCode: 500, type: typeof(ErrorResponseV1))]
        public abstract Task<IActionResult> GetOrderStatus([FromRoute (Name = "orderId")][Required]string orderId);
        }
    }